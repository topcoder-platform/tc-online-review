<?xml version="1.0" encoding="UTF-8"?>
<project name="Late Deliverables Tracker" default="dist" basedir=".">

    <!-- property file defining the component's dependencies -->
    <property file="build.properties"/>

    <!-- Import the dependencies of this build file -->
    <import file="${online_review_home}/build-dependencies.xml" optional="yes"/>
    
    <!--Import the build-components.xml -->
    <property name="components.conf" value="${online_review_home}/components.xml" />
    <property name="components_dir" value="${online_review_home}/components" />
    <import file="${online_review_home}/build-components.xml" optional="yes"/>


    <property name="builddir" value="${online_review_home}/build/ant/late_deliverables_tracker"/>
    <property name="build_classdir" value="${builddir}/classes"/>
    <property name="build_distdir" value="${builddir}/dist"/>

    <property name="late_deliverables_tracker.jar" value="${build_distdir}/late_deliverables_tracker.jar" />

    <!-- EXECUTION TAGS -->
    <property name="debug" value="true"/>
    <property name="verbose" value="no"/>

    <target name="clean" description="Removes the build directory for Late Deliverables Tracker">
        <delete failonerror="false" dir="${builddir}"/>
    </target>

    <target name="compile">
        <trycatch property="error">
            <try>
                <get-components-src />
                <mkdir dir="${build_classdir}"/>
                <javac srcdir="${components_src}" destdir="${build_classdir}" includes="**/*.java"
                       debug="${debug}" verbose="${verbose}"
                       source="1.5" target="1.5">
                    <classpath refid="buildlibs"/>
                </javac>
            </try>
            <catch >
                <echo >----------------------------------------------------------------------------------------------------------</echo>
                <echo >IMPORTANT - Make sure that all component's sources are up to date by executing 'ant checkout-components' !</echo>
                <echo >----------------------------------------------------------------------------------------------------------</echo>
                <fail>${error}</fail>
            </catch>
        </trycatch >
    </target>

    <!-- replaces variables in configuration files with values for the target environment -->
    <target name="tokenize"
            description="Initializes the configuration files for Late Deliverables Tracker with parameters set in token.properties file">
        <mkdir dir="${build_distdir}"/>

        <copy todir="${build_distdir}" overwrite="true">
            <fileset dir=".">
                <include name="conf/**/*"/>
                <include name="build.properties"/>
            </fileset>
        </copy>

        <replace dir="${build_distdir}" replacefilterfile="${token.properties}">
            <include name="**/*"/>
        </replace>
    </target>

    <target name="package_ldt" depends="clean, compile"
            description="Compiles and packages late deliveragble tracker tool">
        <mkdir dir="${build_distdir}"/>
        <jar destfile="${late_deliverables_tracker.jar}" basedir="${build_classdir}"
             includes="**/*.class"/>
    </target>

    <target name="dist" depends="package_ldt, tokenize"
            description="Builds the JAR file with binary distribution of Late Deliverables Tracker">
        <delete file="${build_distdir}/late_deliverables_tracker_app.jar" failonerror="false"/>
        <jar destfile="${build_distdir}/late_deliverables_tracker_app.jar" filesonly="true">
            <fileset file="${late_deliverables_tracker.jar}"/>
            <fileset file="${jaf.jar}"/>
            <fileset file="${executable_wrapper.jar}"/>
            <fileset file="${id_generator.jar}"/>
            <fileset file="${ifx-jdbc.jar}"/>
            <fileset file="${job_processor.jar}"/>
            <fileset file="${job_scheduling.jar}"/>
            <fileset file="${log4j.jar}"/>
            <fileset file="${javamail.jar}"/>
            <fileset file="${object_factory.jar}"/>
            <fileset file="${object_factory_configuration_api_plugin.jar}"/>
            <fileset file="${user_project_data_store.jar}"/>
            <fileset file="${xerces.jar}"/>
            <fileset dir=".">
                <include name="build.xml"/>
            </fileset>
            <fileset dir="${build_distdir}">
                <include name="conf/**/*"/>
                <include name="build.properties"/>
            </fileset>
        </jar>
    </target>

    <target name="deploy" description="Deploys Late Deliverables Tracker to target directory">
        <mkdir dir="${deploy-dir}"/>
        <unjar src="${build_distdir}/late_deliverables_tracker_app.jar" dest="${deploy-dir}/lib">
            <patternset>
                <include name="**/*.jar"/>
            </patternset>
        </unjar>
        <unjar src="${build_distdir}/late_deliverables_tracker_app.jar" dest="${deploy-dir}">
            <patternset>
                <include name="conf/**/*"/>
                <include name="build.properties"/>
                <include name="build.xml"/>
                <include name="*.html"/>
            </patternset>
        </unjar>
    </target>

    <target name="main" depends="dist"
            description="Builds the JAR file with binary distribution of Late Deliverables Tracker">
    </target>

    <target name="start_ldt" description="Starts Late Deliverables Tracker in background thread">
        <launch_late_deliverables_tracker background="true"/>
        <touch file="${running_file}"/>
    </target>

    <target name="stop_ldt"
            description="Raises a flag to currently running Late Deliverables Tracker causing it to stop it's activity and exit">
        <touch file="${guard_file}" />
        <delete file="${running_file}"/>
        <sleep seconds="10"/>
        <echo message="Stopped Late Deliverables Tracker job"/>
    </target>

    <target name="restart_ldt"  description="Restarts the Late Deliverables Tracker which is currently running">
        <antcall target="stop_ldt"/>
        <sleep seconds="10"/>
        <antcall target="start_ldt"/>
    </target>

    <target name="test_ldt" description="Starts Late Deliverables Tracker in current thread (useful for testing mostly)">
        <launch_late_deliverables_tracker background="false"/>
    </target>

    <target name="all" depends="clean, main, deploy" description="--> cleans and rebuilds the Late Deliverables Tracker"/>
  
    <!-- Macro for launching Late Deliverables Tracker -->
    <macrodef name="launch_late_deliverables_tracker">
        <attribute name="background" default="false"/>
        <sequential>
            <available file="${running_file}" property="isAlreadyRunning"/>
            <fail message="Late Deliverables Tracker is already running. The file ${running_file} is found">
                <condition>
                    <istrue value="${isAlreadyRunning}"/>
                </condition>
            </fail>
            <tstamp>
                <format property="touch.time" pattern="MM/dd/yyyy hh:mm aa" />
            </tstamp>
            <echo message="Launching Late Deliverables Tracker job with following parameters:"/>
            <echo message="    trackingInterval: ${tracking_interval}"/>
            <echo message="    notificationInterval: ${pm_notification_interval}"/>
            <echo message="    startTime   : ${touch.time}"/>
            <echo message="    guardFile   : ${guard_file}"/>
            <echo message="    runningFile : ${running_file}"/>
            <delete file="${guard_file}" failonerror="no"/>

            <java classname="com.topcoder.management.deliverable.latetracker.utility.LateDeliverablesTrackingUtility"
                  fork="true" spawn="@{background}">
                <arg value="-trackingInterval"/>
                <arg value="${tracking_interval}"/>
                <arg value="-notificationInterval"/>
                <arg value="${pm_notification_interval}"/>
                <arg value="-background"/>
                <arg value="@{background}"/>
                <arg value="-guardFile"/>
                <arg value="${guard_file}"/>
                <classpath>
                    <fileset dir="./lib" includes="*.jar"/>
                </classpath>
                <classpath path="./conf"/>
            </java>
        </sequential>
    </macrodef>
</project>
