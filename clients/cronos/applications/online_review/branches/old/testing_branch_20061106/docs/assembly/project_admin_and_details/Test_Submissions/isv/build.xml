<?xml version="1.0"?>

<project name="Online Review Project Admin and Details" default="dist" basedir=".">

    <property file="../topcoder_global.properties"/>

    <!-- COMPONENT PARAMETERS -->
    <property name="component" value="Online_Review" />
    <property name="package" value="com.cronos.onlinereview.project" />
    <property name="packagedir" value="com/cronos/onlinereview/project" />
    <property name="distfilename" value="online_review" />
    <property name="component_version" value="1.0" />
    <property name="component_path" value="${distfilename}/${component_version}" />

    <!-- DIRECTORY SETUP -->
    <property name="srcdir" value="src" />
    <property name="tcs_libdir" value="lib/tcs" />
    <property name="ext_libdir" value="lib" />
    <property name="jar_tcs_libdir" value="lib/tcs" />
    <property name="jar_ext_libdir" value="lib/third_party" />
    <property name="docsdir" value="docs" />
    <property name="configdir" value="conf" />
    <property name="testlogdir" value="log" />
    <property name="testfiles" value="test_files" />
    <property name="javadocsdir" value="${docsdir}/javadocs" />
    <property name="webdir" value="web" />
    <property name="reports" value="reports" />

    <property name="javasrc" value="${srcdir}/java" />
    <property name="javamain" value="${javasrc}/main" />
    <property name="javatests" value="${javasrc}/tests" />

    <property name="builddir" value="build" />
    <property name="build_classdir" value="${builddir}/classes" />
    <property name="build_testclassdir" value="${builddir}/testClasses" />
    <property name="build_targetclassdir" value="${builddir}/targetclasses" />
    <property name="build_distdir" value="${builddir}/dist" />
    <property name="build_docsdir" value="${builddir}/${docsdir}" />
    <property name="build_javadocsdir" value="${builddir}/${javadocsdir}" />
    <property name="build_webdir" value="${builddir}/${webdir}" />
    <property name="build_lib" value="${builddir}/lib" />
    <property name="build_tcsdistdir" value="${build_distdir}/${distfilename}-${component_version}" />

    <!-- EXECUTION TAGS -->
    <property name="debug" value="off" />
    <property name="verbose" value="no" />

    <!-- COMPONENT DISTRIBUTION STRUCTURE -->
    <property name="dist_conf" value="${build_tcsdistdir}/${configdir}" />
    <property name="dist_lib" value="${build_distdir}/lib/tcs" />
    <property name="dist_src" value="${build_tcsdistdir}/${srcdir}" />
    <property name="dist_docs" value="${build_tcsdistdir}/${docsdir}" />
    <property name="dist_javadocs" value="${build_tcsdistdir}/${javadocsdir}" />
    <property name="dist_testfiles" value="${build_tcsdistdir}/${testfiles}" />

    <!-- NAME FOR .JAR AND .WAR FILES -->
    <property name="component.jar" value="${dist_lib}/${component_path}/${distfilename}.jar"/>
    <property name="javadoc.jar" value="${builddir}/javadocs.jar"/>
    <property name="component.tests.jar" value="${dist_lib}/${distfilename}_tests.jar"/>
    <property name="component.war" value="${dist_examples}/${distfilename}.war"/>
    <property name="component.dist.jar" value="${build_distdir}/${distfilename}-${component_version}.jar"/>
    <property name="dev_submission.jar" value="${component}_${component_version}_dev_submission.jar"/>
    <property name="design_submission.jar" value="${component}_${component_version}_design_submission.jar"/>
    <property name="dev_dist.jar" value="${component}_${component_version}_dev_dist.jar"/>
    <property name="design_dist.jar" value="${component}_${component_version}_design_dist.jar"/>

    <!-- TCS Dependencies -->
    <property name="configmanager.version" value="2.1.4"/>
    <property name="configmanager.jar.name" value="configuration_manager.jar"/>
    <property name="configmanager.path" value="configuration_manager/${configmanager.version}"/>
    <property name="configmanager.jar" value="${tcs_libdir}/${configmanager.path}/${configmanager.jar.name}"/>

    <property name="db_connection_factory.version" value="1.0"/>
    <property name="db_connection_factory.jar.name" value="db_connection_factory.jar"/>
    <property name="db_connection_factory.path" value="db_connection_factory/${db_connection_factory.version}"/>
    <property name="db_connection_factory.jar"
              value="${tcs_libdir}/${db_connection_factory.path}/${db_connection_factory.jar.name}"/>

    <property name="base_exception.version" value="1.0"/>
    <property name="base_exception.jar.name" value="base_exception.jar"/>
    <property name="base_exception.path" value="base_exception/${base_exception.version}"/>
    <property name="base_exception.jar" value="${tcs_libdir}/${base_exception.path}/${base_exception.jar.name}"/>

    <property name="guid_generator.version" value="1.0"/>
    <property name="guid_generator.jar.name" value="guid_generator.jar"/>
    <property name="guid_generator.path" value="guid_generator/${guid_generator.version}"/>
    <property name="guid_generator.jar" value="${tcs_libdir}/${guid_generator.path}/${guid_generator.jar.name}"/>

    <property name="authorization.version" value="2.1"/>
    <property name="authorization.jar.name" value="authorization.jar"/>
    <property name="authorization.path" value="authorization/${authorization.version}"/>
    <property name="authorization.jar" value="${tcs_libdir}/${authorization.path}/${authorization.jar.name}"/>

    <property name="type_safe_enum.version" value="1.0"/>
    <property name="type_safe_enum.jar.name" value="typesafe_enum.jar"/>
    <property name="type_safe_enum.path" value="typesafe_enum/${type_safe_enum.version}"/>
    <property name="type_safe_enum.jar" value="${tcs_libdir}/${type_safe_enum.path}/${type_safe_enum.jar.name}"/>

    <!-- 3rd Party Dependencies  -->
    <property name="junit.jar" value="${ext_libdir}/junit/3.8.1/junit.jar"/>
    <property name="dbunit.jar" value="${ext_libdir}/dbunit/2.1/dbunit.jar"/>
    <property name="rhino.jar" value="${ext_libdir}/rhino/1.6/js.jar"/>
    <property name="tidy.jar" value="${ext_libdir}/tidy/tidy.jar"/>
    <property name="informix.jar" value="${ext_libdir}/informix/ifxjdbc.jar"/>
    <property name="checkstyle.jar" value="${ext_libdir}/checkstyle/3.5/checkstyle-all-3.5.jar"/>

    <!-- HTML Unit dependencies -->
    <property name="htmlunit.jar" value="${ext_libdir}/htmlunit/1.9/htmlunit-1.9.jar"/>
    <property name="commons-beanutils.jar" value="${ext_libdir}/htmlunit/1.9/commons-beanutils-1.7.0.jar"/>
    <property name="commons-cli.jar" value="${ext_libdir}/htmlunit/1.9/commons-cli-1.0.jar"/>
    <property name="commons-codec.jar" value="${ext_libdir}/htmlunit/1.9/commons-codec-1.3.jar"/>
    <property name="commons-collections.jar" value="${ext_libdir}/htmlunit/1.9/commons-collections-3.2.jar"/>
    <property name="commons-httpclient.jar" value="${ext_libdir}/htmlunit/1.9/commons-httpclient-3.0.1.jar"/>
    <property name="commons-io.jar" value="${ext_libdir}/htmlunit/1.9/commons-io-1.2.jar"/>
    <property name="commons-jelly.jar" value="${ext_libdir}/htmlunit/1.9/commons-jelly-1.0.jar"/>
    <property name="commons-jelly-tags-log.jar" value="${ext_libdir}/htmlunit/1.9/commons-jelly-tags-log-1.0.jar"/>
    <property name="commons-jexl.jar" value="${ext_libdir}/htmlunit/1.9/commons-jexl-1.0.jar"/>
    <property name="commons-lang.jar" value="${ext_libdir}/htmlunit/1.9/commons-lang-2.1.jar"/>
    <property name="commons-logging.jar" value="${ext_libdir}/htmlunit/1.9/commons-logging-1.1.jar"/>
    <property name="dom4j.jar" value="${ext_libdir}/htmlunit/1.9/dom4j-1.6.1.jar"/>
    <property name="jaxen.jar" value="${ext_libdir}/htmlunit/1.9/jaxen-1.1-beta-9.jar"/>
    <property name="js.jar" value="${ext_libdir}/htmlunit/1.9/js-1.6R2.jar"/>
    <property name="nekohtml.jar" value="${ext_libdir}/htmlunit/1.9/nekohtml-0.9.5.jar"/>
    <property name="xerces-impl.jar" value="${ext_libdir}/htmlunit/1.9/xercesImpl-2.6.2.jar"/>
    <property name="xml-parser.jar" value="${ext_libdir}/htmlunit/1.9/xmlParserAPIs-2.6.2-.jar"/>

    <!-- Java Locations -->
    <property name="java_1_3_bootclasspath" value="c:\program files\JavaSoft\JRE\1.3.1\lib\rt.jar"/>

    <path id="buildlibs">
        <pathelement location="${junit.jar}" />
        <pathelement location="${dbunit.jar}" />
        <pathelement location="${htmlunit.jar}" />
        <pathelement location="${rhino.jar}" />
        <pathelement location="${tidy.jar}" />
        <pathelement location="${authorization.jar}" />
        <pathelement location="${configmanager.jar}" />
        <pathelement location="${base_exception.jar}" />
        <pathelement location="${guid_generator.jar}" />
        <pathelement location="${db_connection_factory.jar}" />
        <pathelement location="${type_safe_enum.jar}" />

        <pathelement location="${htmlunit.jar}" />
        <pathelement location="${commons-beanutils.jar}" />
        <pathelement location="${commons-cli.jar}" />
        <pathelement location="${commons-codec.jar}" />
        <pathelement location="${commons-collections.jar}" />
        <pathelement location="${commons-httpclient.jar}" />
        <pathelement location="${commons-io.jar}" />
        <pathelement location="${commons-jelly-tags-log.jar}" />
        <pathelement location="${commons-jelly.jar}" />
        <pathelement location="${commons-jexl.jar}" />
        <pathelement location="${commons-lang.jar}" />
        <pathelement location="${commons-logging.jar}" />
        <pathelement location="${dom4j.jar}" />
        <pathelement location="${jaxen.jar}" />
        <pathelement location="${js.jar}" />
        <pathelement location="${nekohtml.jar}" />
<!--
        <pathelement location="${xerces-impl.jar}" />
        <pathelement location="${xml-parser.jar}" />
-->
    </path>

    <path id="test.build.classpath">
        <pathelement location="${build_testclassdir}"/>
        <pathelement location="${build_classdir}"/>
        <pathelement location="${testfiles}"/>
        <pathelement location="${testfiles}/config"/>
        <pathelement location="${informix.jar}"/>
        <pathelement location="${checkstyle.jar}"/>
        <path refid="buildlibs"/>
    </path>

    <path id="runtime.classpath">
        <pathelement location="${build_classdir}"/>
        <path refid="buildlibs"/>
    </path>

    <target name="compile">
        <mkdir dir="${build_classdir}"/>
        <javac srcdir="${javamain}" destdir="${build_classdir}" includes="${packagedir}/**" debug="true" verbose="${verbose}">
            <classpath refid="buildlibs" />
        </javac>
    </target>

    <target name="compile_targets">
        <!-- test compile against 1.3 -->
        <mkdir dir="${build_targetclassdir}"/>
        <mkdir dir="${javatests}"/>
        <javac srcdir="${javamain}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
               debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
               >
            <classpath refid="buildlibs" />
        </javac>

        <!-- compile test cases -->
        <javac srcdir="${javatests}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
               debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
               >
            <classpath refid="buildlibs" />
        </javac>
        <delete dir="${build_targetclassdir}"/>
    </target>

    <target name="compile_tests">
        <mkdir dir="${build_testclassdir}"/>
        <javac srcdir="${javatests}" destdir="${build_testclassdir}" includes="${packagedir}/**" debug="true"
               verbose="${verbose}" source="1.4">
            <classpath refid="test.build.classpath" />
        </javac>
    </target>

    <target name="test" depends="compile_tests">
        <mkdir dir="${testlogdir}"/>
        <junit fork="true" haltonerror="false">
            <classpath refid="test.build.classpath"/>
            <test name="${package}.admin.functionaltests.ProjectAdminAndDetailsTestSuite" todir="${testlogdir}">
                <formatter type="plain" usefile="true"/>
                <!--<formatter type="xml" usefile="true"/>-->
            </test>
        </junit>
    </target>

    <target name="reports" depends="test">
        <mkdir dir="${reports}"/>

        <junitreport todir="${reports}">
          <fileset dir="${testlogdir}">
            <include name="*.xml"/>
          </fileset>
          <report format="frames" todir="${reports}"/>
        </junitreport>
        <echo>The execution of reports is complete.  Reports are available in /${reports}</echo>
    </target>

    <target name="dist" depends="compile">
        <mkdir dir="${dist_lib}/${component_path}"/>
        <jar jarfile="${component.jar}" basedir="${build_classdir}" />
    </target>

    <target name="dist_tests" depends="compile_tests">
        <mkdir dir="${dist_lib}"/>
        <jar jarfile="${component.tests.jar}" basedir="${build_testclassdir}" />
    </target>

    <target name="javadoc" depends="compile">
        <mkdir dir="${dist_javadocs}" />
        <javadoc packagenames="${package}.*"
            sourcepath="${javamain}"
            classpath="${build_classdir}"
            classpathref="buildlibs"
            destdir="${dist_javadocs}"
            windowtitle="Topcoder Software"
            header="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
            footer="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
            bottom="&lt;font class=tcoder5&gt;Contact TopCoder Software at &lt;a href='http://www.topcodersoftware.com'&gt;www.topcodersoftware.com&lt;/a&gt;&lt;/font&gt;"
            stylesheetfile="${javadocsdir}/stylesheet.css"
            verbose="${verbose}">
            <tag name="copyright" description="Copyright:" scope="types"/>
                </javadoc>
    </target>

    <target name="clean">
        <delete dir="${builddir}"/>
    </target>


    <target name="deploy" depends="dist">
    </target>

    <target name="main" depends="deploy,test">
    </target>



    <!-- ************************************************************************** -->
    <!-- ************ REMOVE EVERYTHING BELOW HERE FOR THE DISTRIBUTION ************* -->
    <!-- ************************************************************************** -->

    <target name="dist_tcs" depends="clean,dist,javadoc">
        <!-- define tcs distribution format -->
<!-- uncomment if configuration files exist.
        <mkdir dir="${dist_conf}"/>
        <copy todir="${dist_conf}">
            <fileset dir="${configdir}" />
        </copy>
-->

        <mkdir dir="${dist_src}"/>
        <copy todir="${dist_src}">
            <fileset dir="${srcdir}" />
        </copy>

        <copy todir="${dist_docs}" >
            <fileset dir="${docsdir}">
                <include name="${component}_Class_Diagram*"/>
                <include name="${component}_Use_Case_Diagram*"/>
                <include name="${component}_Sequence_Diagram*"/>
                <include name="${component}_Requirements_Specification*"/>
                <include name="${component}_Component_Specification*"/>
                <include name="${component}.zargo"/>
                <include name="${component}.zuml"/>
            </fileset>
        </copy>

        <mkdir dir="${dist_javadocs}"/>
        <copy todir="${dist_javadocs}">
            <fileset dir="${javadocsdir}" />
        </copy>

        <jar jarfile="${javadoc.jar}" basedir="${build_tcsdistdir}\docs\javadocs"/>

<!-- uncomment if test files exist.
        <mkdir dir="${dist_testfiles}"/>
        <copy todir="${dist_testfiles}">
            <fileset dir="${testfiles}" />
        </copy>
-->
        <copy file="build_dist.xml" tofile="${build_tcsdistdir}/build.xml" />
        <copy file="README" tofile="${build_tcsdistdir}/README" />
        <jar jarfile="${component.dist.jar}" basedir="${build_distdir}" excludes="*.jar"/>
        <antcall target="moveToTCS"/>

    </target>

    <target name="moveToTCS">
        <mkdir dir="${tcs_libdir}/${component_path}"/>
        <mkdir dir="${tcs_libdir}/${component_path}/dist"/>

        <copy file="${component.jar}" todir="${tcs_libdir}/${component_path}"/>

        <copy file="${component.dist.jar}" todir="${tcs_libdir}/${component_path}/dist"/>


    </target>


    <target name="dev_submission" depends="test">
        <jar jarfile="${dev_submission.jar}"
             basedir="."
             includes="${configdir}/**,${javamain}/**/*.java,${javatests}/${packagedir}/**,${testlogdir}/**,${testfiles}/**,${docsdir}/**"
             excludes="${javatests}/${packagedir}/AllTests.java,${javatests}/${packagedir}/stresstests/*,${javatests}/${packagedir}/failuretests/*,
                       ${javatests}/${packagedir}/accuracytests/*"
        />
    </target>

    <target name="design_submission">
        <jar jarfile="${design_submission.jar}"
             basedir="."
             includes="${configdir}/**,${javamain}/**,${docsdir}/**,${testfiles}/**"
        />
    </target>

    <target name="dev_dist">
        <!-- copy TCS Dependencies -->
        <mkdir dir="${jar_tcs_libdir}/${configmanager.path}"/>
        <copy file="${configmanager.jar}" todir="${jar_tcs_libdir}/${configmanager.path}" />
        <mkdir dir="${jar_tcs_libdir}/${db_connection_factory.path}"/>
        <copy file="${db_connection_factory.jar}" todir="${jar_tcs_libdir}/${db_connection_factory.path}" />
        <mkdir dir="${jar_tcs_libdir}/${base_exception.path}"/>
        <copy file="${base_exception.jar}" todir="${jar_tcs_libdir}/${base_exception.path}" />

        <jar jarfile="${dev_dist.jar}"
             basedir="."
             includes="build.xml,
                       ${configdir}/**,
                       ${srcdir}/**,
                       ${docsdir}/**,
                       ${jar_tcs_libdir}/**,
                       ${testfiles}/**"
        />

        <delete dir="${jar_tcs_libdir}"/>
    </target>

    <target name="design_dist">
        <!-- copy TCS Dependencies -->
        <!--
        <mkdir dir="${jar_tcs_libdir}/${configmanager.path}"/>
        <copy file="${configmanager.jar}" todir="${jar_tcs_libdir}/${configmanager.path}" />
        -->
        <jar jarfile="${design_dist.jar}"
             basedir="."
             includes="build.xml,
                       ${configdir}/**,
                       ${srcdir}/**,
                       ${docsdir}/**,
                       ${jar_tcs_libdir}/**,
                       ${testfiles}/**"
        />

        <!--
        <delete dir="${jar_tcs_libdir}"/>
        -->
    </target>

    <!-- ************************************************************************** -->
    <!-- ************************ END REMOVE EVERYTHING ***************************** -->
    <!-- ************************************************************************** -->
   <taskdef resource="checkstyletask.properties" classpath="${checkstyle.jar}"/>

    <target name="checkstyle_tests" depends="compile_tests">
        <mkdir dir="${testlogdir}"/>
        <checkstyle config="c:\TopCoder\tc_test_checks.xml" classpathref="test.build.classpath">
            <fileset dir="${javatests}/${packagedir}/" includes="**/*.java"
                     excludes="UnitTests.java, AllTests.java, stresstests/*, failuretests/*, accuracytests/*" />
            <formatter type="plain" toFile="${testlogdir}/checkstyletest.txt" />
        </checkstyle>
    </target></project>
