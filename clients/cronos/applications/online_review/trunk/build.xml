<?xml version="1.0"?>

<project name="OR_Migration" default="dist" basedir=".">

    <property file="../topcoder_global.properties"/>
    <condition property="orm-properties-present">
        <and>
            <available file="${basedir}/build-or-migration.properties"/>
        </and>
    </condition>
    <fail unless="orm-properties-present">
	   You are missing build-or-migration.properties properties file.
	</fail>
    <property name="build.properties" value="${basedir}/build-or-migration.properties"/>
    <property file="${build.properties}"/>

    <!-- COMPONENT PARAMETERS -->
    <property name="component" value="OR_migration" />
    <property name="package" value="com.topcoder.onlinereview.migration" />
    <property name="packagedir" value="com/topcoder/onlinereview/migration" />
    <property name="distfilename" value="or_migration" />
    <property name="component_version" value="1.0" />
    <property name="component_path" value="${distfilename}/${component_version}" />

    <!-- DIRECTORY SETUP -->
    <property name="srcdir" value="src" />
    <property name="tcs_libdir" value="lib/tcs" />
    <property name="ext_libdir" value="lib" />
    <property name="jar_tcs_libdir" value="lib/tcs" />
    <property name="jar_ext_libdir" value="lib" />
    <property name="docsdir" value="docs" />
    <property name="configdir" value="conf" />
    <property name="testlogdir" value="log" />
    <property name="testfiles" value="test_files" />
    <property name="javadocsdir" value="${docsdir}/javadocs" />
    <property name="webdir" value="web" />
    <property name="reports" value="reports" />

    <property name="javasrc" value="${srcdir}/java" />
    <property name="javamain" value="${javasrc}/main" />
    <property name="javatests" value="${javasrc}/tests" />

    <property name="builddir" value="build" />
    <property name="build_classdir" value="${builddir}/classes" />
    <property name="build_testclassdir" value="${builddir}/testClasses" />
    <property name="build_targetclassdir" value="${builddir}/targetclasses" />
    <property name="build_distdir" value="${builddir}/dist" />
    <property name="build_docsdir" value="${builddir}/${docsdir}" />
    <property name="build_javadocsdir" value="${builddir}/${javadocsdir}" />
    <property name="build_webdir" value="${builddir}/${webdir}" />
    <property name="build_lib" value="${builddir}/lib" />
    <property name="build_tcsdistdir" value="${build_distdir}/${distfilename}-${component_version}" />
    
    <path id="orm.classpathref">
        <fileset dir="${ext_libdir}">
            <include name="**/*.jar"/>
            <include name="**/*.zip"/>
        </fileset>
    </path>
    
    <macrodef name="orm-trace">
        <attribute name="message" default="Welcome to orm"/>
        <sequential>
            <echo message=" @{message}"/>
        </sequential>
    </macrodef>
    
    <macrodef name="orm-execute-old-sql-script">
        <attribute name="driver" default="${orm.jdbc.driver}"/>
        <attribute name="url" default="${orm.jdbc.old_url}"/>
        <attribute name="userid" default="${orm.db.userid}"/>
        <attribute name="password" default="${orm.db.password}"/>
        <attribute name="print" default="yes"/>
        <attribute name="classpathref" default="orm.classpathref"/>
        <attribute name="scriptfile"/>
        <attribute name="delimiter" default=";"/>
        <attribute name="onerror" default="continue"/>
        <attribute name="output" default="${testlogdir}/db.query.log"/>
        <sequential>
            <orm-trace message=" running sql script @{scriptfile}" />
            <sql driver="@{driver}" url="@{url}" userid="@{userid}" password="@{password}" print="@{print}" classpathref="@{classpathref}" src="@{scriptfile}" delimiter="@{delimiter}" onerror="@{onerror}" autocommit="true" output="@{output}"/>
        </sequential>
    </macrodef>
    
    <macrodef name="orm-execute-sql-script">
        <attribute name="driver" default="${orm.jdbc.driver}"/>
        <attribute name="url" default="${orm.jdbc.url}"/>
        <attribute name="userid" default="${orm.db.userid}"/>
        <attribute name="password" default="${orm.db.password}"/>
        <attribute name="print" default="yes"/>
        <attribute name="classpathref" default="orm.classpathref"/>
        <attribute name="scriptfile"/>
        <attribute name="delimiter" default=";"/>
        <attribute name="onerror" default="continue"/>
        <attribute name="output" default="${testlogdir}/db.init.log"/>
        <sequential>
            <orm-trace message=" running sql script @{scriptfile}" />
            <sql driver="@{driver}" url="@{url}" userid="@{userid}" password="@{password}" print="@{print}" classpathref="@{classpathref}" src="@{scriptfile}" delimiter="@{delimiter}" onerror="@{onerror}" autocommit="true" output="@{output}"/>
        </sequential>
    </macrodef>

    <property name="sql.home" value="${testfiles}/scripts" />

    <property name="Drop_old.file" value="${sql.home}/Drop_old.sql" />
    <property name="Drop_new.file" value="${sql.home}/Drop_new.sql" />
    <property name="Create.file" value="${sql.home}/Create.sql" />
    <property name="Lookups.file" value="${sql.home}/Lookups.sql" />
    <property name="Sequences.file" value="${sql.home}/Sequences.sql" />
    <property name="query_new_test.file" value="${sql.home}/query_new_test.sql" />
    <property name="query.file" value="${sql.home}/query.sql" />
    <property name="query_old.file" value="${sql.home}/query_old.sql" />
    <property name="init_projects.file" value="${sql.home}/init_projects.sql" />
    <property name="init_scorecards.file" value="${sql.home}/init_scorecards.sql" />
    <property name="update_private_project.file" value="${sql.home}/update_private_project.sql" />

    <!-- EXECUTION TAGS -->
    <property name="debug" value="off" />
    <property name="verbose" value="no" />

    <!-- COMPONENT DISTRIBUTION STRUCTURE -->
    <property name="dist_conf" value="${build_tcsdistdir}/${configdir}" />
    <property name="dist_lib" value="${build_distdir}/lib/tcs" />
    <property name="dist_src" value="${build_tcsdistdir}/${srcdir}" />
    <property name="dist_docs" value="${build_tcsdistdir}/${docsdir}" />
    <property name="dist_javadocs" value="${build_tcsdistdir}/${javadocsdir}" />
    <property name="dist_testfiles" value="${build_tcsdistdir}/${testfiles}" />

    <!-- NAME FOR .JAR AND .WAR FILES -->
    <property name="component.jar" value="${dist_lib}/${component_path}/${distfilename}.jar"/>
    <property name="javadoc.jar" value="javadocs.jar"/>
    <property name="component.tests.jar" value="${dist_lib}/${distfilename}_tests.jar"/>
    <property name="component.war" value="${dist_examples}/${distfilename}.war"/>
    <property name="component.dist.jar" value="${build_distdir}/${distfilename}-${component_version}.jar"/>
    <property name="dev_submission.jar" value="${component}_${component_version}_dev_submission.jar"/>
    <property name="design_submission.jar" value="${component}_${component_version}_design_submission.jar"/>
    <property name="dev_dist.jar" value="${component}_${component_version}_dev_dist.jar"/>
    <property name="design_dist.jar" value="${component}_${component_version}_design_dist.jar"/>

    <!-- DOCUMENT PACKAGE -->
    <property name="dist_docpackage" value="${builddir}/doc_package" />
    <property name="docpackage.jar" value="${distfilename}_docs.jar" />
    
    <!-- TCS Dependencies -->
    <property name="base_exception.version" value="1.0"/>
    <property name="base_exception.jar.name" value="base_exception.jar"/>
    <property name="base_exception.path" value="base_exception/${base_exception.version}"/>
    <property name="base_exception.jar" value="${tcs_libdir}/${base_exception.path}/${base_exception.jar.name}"/>
    
    <property name="command_line_utility.version" value="1.0"/>
    <property name="command_line_utility.jar.name" value="command_line_utility.jar"/>
    <property name="command_line_utility.path" value="command_line_utility/${command_line_utility.version}"/>
    <property name="command_line_utility.jar" value="${tcs_libdir}/${command_line_utility.path}/${command_line_utility.jar.name}"/>
    
    <property name="logging_wrapper.version" value="1.3"/>
    <property name="logging_wrapper.jar.name" value="logging_wrapper.jar"/>
    <property name="logging_wrapper.path" value="logging_wrapper/${logging_wrapper.version}"/>
    <property name="logging_wrapper.jar" value="${tcs_libdir}/${logging_wrapper.path}/${logging_wrapper.jar.name}"/>
    
    <property name="configmanager.version" value="2.1.4"/>
    <property name="configmanager.jar.name" value="configuration_manager.jar"/>
    <property name="configmanager.path" value="configuration_manager/${configmanager.version}"/>
    <property name="configmanager.jar" value="${tcs_libdir}/${configmanager.path}/${configmanager.jar.name}"/>
    
    <property name="typesafe_enum.version" value="1.0"/>
    <property name="typesafe_enum.jar.name" value="typesafe_enum.jar"/>
    <property name="typesafe_enum.path" value="typesafe_enum/${typesafe_enum.version}"/>
    <property name="typesafe_enum.jar" value="${tcs_libdir}/${typesafe_enum.path}/${typesafe_enum.jar.name}"/>
    
    <property name="db_connection_factory.version" value="1.0"/>
    <property name="db_connection_factory.jar.name" value="db_connection_factory.jar"/>
    <property name="db_connection_factory.path" value="db_connection_factory/${db_connection_factory.version}"/>
    <property name="db_connection_factory.jar" value="${tcs_libdir}/${db_connection_factory.path}/${db_connection_factory.jar.name}"/>
    
    <property name="id_generator.version" value="3.0"/>
    <property name="id_generator.jar.name" value="id_generator.jar"/>
    <property name="id_generator.path" value="id_generator/${id_generator.version}"/>
    <property name="id_generator.jar" value="${tcs_libdir}/${id_generator.path}/${id_generator.jar.name}"/>

    <!-- 3rd Party Dependencies  -->
    <property name="junit.jar" value="${ext_libdir}/junit.jar"/>
    <property name="mysql.jar" value="${ext_libdir}/mysql-connector-java-3.1.12-bin.jar" />
    <property name="ifxjdbc.jar" value="${ext_libdir}/ifxjdbc.jar"/>
    <property name="log4j.jar" value="${ext_libdir}/log4j.jar"/>

    <!-- Java Locations -->
    <property name="java_1_3_bootclasspath" value="c:\program files\JavaSoft\JRE\1.3.1\lib\rt.jar"/>

    <path id="buildlibs">
        <pathelement location="${junit.jar}" />
        <pathelement location="${log4j.jar}" />
        <pathelement location="${ifxjdbc.jar}" />
        <pathelement location="${mysql.jar}" />
        <pathelement location="${id_generator.jar}" />
        <pathelement location="${db_connection_factory.jar}" />
        <pathelement location="${typesafe_enum.jar}" />
        <pathelement location="${logging_wrapper.jar}" />
        <pathelement location="${base_exception.jar}" />
        <pathelement location="${command_line_utility.jar}" />
        <pathelement location="${configmanager.jar}" />
        <pathelement location="${configdir}" />
        <pathelement location="${testfiles}" />
        <pathelement location="${basedir}" />
    </path>

    <path id="test.build.classpath">
        <pathelement location="${build_testclassdir}"/>
        <pathelement location="${build_classdir}"/>
        <path refid="buildlibs"/>
    </path>

    <path id="runtime.classpath">
        <pathelement location="${build_classdir}"/>
        <path refid="buildlibs"/>
    </path>

	<target name="db.init">
		<orm-execute-sql-script scriptfile="${Drop_old.file}" />
		<orm-execute-sql-script scriptfile="${Drop_new.file}" />
		<orm-execute-sql-script scriptfile="${Create.file}" />
		<orm-execute-sql-script scriptfile="${Lookups.file}" />
		<orm-execute-sql-script scriptfile="${Sequences.file}" />
	</target>

	<target name="db.query">
		<orm-execute-old-sql-script output="${testlogdir}/db.query.log" scriptfile="${query_old.file}" />
	</target>

	<target name="db.query_test">
		<orm-execute-sql-script output="${testlogdir}/db.query_test.log" scriptfile="${query_new_test.file}" />
	</target>

	<target name="db.new_query">
		<orm-execute-sql-script output="${testlogdir}/db.new_query.log" scriptfile="${query.file}" />
	</target>

	<target name="db.init_projects">
		<orm-execute-sql-script output="${testlogdir}/db.init_projects.log" scriptfile="${init_projects.file}" />
	</target>

	<target name="db.init_scorecard">
		<orm-execute-sql-script output="${testlogdir}/db.init_scorecard.log" scriptfile="${init_scorecards.file}" />
	</target>
	
    <target name="migrate_scorecard" depends="compile_tests">
    	<java classname="${package}.MigratorCommandLine" fork="true" output="${testlogdir}/migrate_scorecards.log">
    		<arg line="-config test_files/data_migration.xml -process scorecard" />
            <classpath refid="test.build.classpath"/>
    	</java>
    </target>
	
    <target name="migrate_project" depends="compile_tests">
    	<java maxmemory="512m" classname="${package}.MigratorCommandLine" fork="true" output="${testlogdir}/migrate_projects.log">
    		<arg line="-config test_files/data_migration.xml -process project" />
            <classpath refid="test.build.classpath"/>
    	</java>
    </target>

    <target name="migrate" depends="compile_tests, db.init_projects, db.init_scorecard">
    	<delete file="test_files/project_id.properties"/>
    	<java maxmemory="512m" classname="${package}.MigratorCommandLine" fork="true" output="${testlogdir}/migrate.log">
    		<arg line="-config test_files/data_migration.xml" />
            <classpath refid="test.build.classpath"/>
    	</java>
    	<orm-execute-sql-script output="${testlogdir}/update_private_project.log" scriptfile="${update_private_project.file}" />
    </target>

    <target name="migrate_ids" depends="compile_tests">
    	<java classname="${package}.MigratorCommandLine" fork="true" output="${testlogdir}/migrate_ids.log">
    		<arg line="-config test_files/data_migration.xml -process specificed -ids 10566757" />
            <classpath refid="test.build.classpath"/>
    	</java>
    </target>

    <target name="compile">
        <mkdir dir="${build_classdir}"/>
        <javac srcdir="${javamain}" destdir="${build_classdir}" includes="${packagedir}/**" debug="true" verbose="${verbose}">
            <classpath refid="buildlibs" />
        </javac>
    </target>

    <target name="compile_targets">
        <!-- test compile against 1.3 -->
        <mkdir dir="${build_targetclassdir}"/>
        <mkdir dir="${javatests}"/>
        <javac srcdir="${javamain}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
	       debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
               >
            <classpath refid="buildlibs" />
        </javac>

        <!-- compile test cases -->
        <javac srcdir="${javatests}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
	       debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
               >
            <classpath refid="buildlibs" />
        </javac>
        <delete dir="${build_targetclassdir}"/>
    </target>

    <target name="compile_tests" depends="compile">
        <mkdir dir="${build_testclassdir}"/>
        <javac srcdir="${javatests}" destdir="${build_testclassdir}" includes="${packagedir}/**" debug="true" verbose="${verbose}">
            <classpath refid="test.build.classpath" />
        </javac>
    </target>

    <target name="test" depends="compile_tests, db.init_projects, db.init_scorecard">
        <mkdir dir="${testlogdir}"/>
        <junit fork="true" haltonerror="false">
            <classpath refid="test.build.classpath"/>
            <test name="${package}.AllTests" todir="${testlogdir}">
                <formatter type="plain" usefile="true"/>
                <formatter type="xml" usefile="true"/>
            </test>
        </junit>
    </target>

    <target name="reports" depends="test">
        <mkdir dir="${reports}"/>

        <junitreport todir="${reports}">
          <fileset dir="${testlogdir}">
            <include name="*.xml"/>
          </fileset>
          <report format="frames" todir="${reports}"/>
        </junitreport>
        
        <echo>The execution of reports is complete.  Reports are available in /${reports}</echo>
    </target>

    <target name="dist" depends="compile">
        <mkdir dir="${dist_lib}/${component_path}"/>
        <jar jarfile="${component.jar}" basedir="${build_classdir}" />
    </target>

    <target name="dist_tests" depends="compile_tests">
        <mkdir dir="${dist_lib}"/>
        <jar jarfile="${component.tests.jar}" basedir="${build_testclassdir}" />
    </target>

    <target name="javadoc" depends="compile">
        <mkdir dir="${dist_javadocs}" />
        <javadoc packagenames="${package}.*"
            sourcepath="${javamain}"
            classpath="${build_classdir}"
            classpathref="buildlibs"
            destdir="${dist_javadocs}"
            windowtitle="Topcoder Software"
            header="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
            footer="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
            bottom="&lt;font class=tcoder5&gt;Contact TopCoder Software at &lt;a href='http://software.topcoder.com'&gt;software.topcoder.com&lt;/a&gt;&lt;/font&gt;"
            stylesheetfile="${javadocsdir}/stylesheet.css"
            verbose="${verbose}">
            <tag name="copyright" description="Copyright:" scope="types"/>
		</javadoc>
    </target>

    <target name="clean">
        <delete dir="${builddir}"/>
    </target>

    <target name="deploy" depends="dist">
    </target>

    <target name="main" depends="deploy,test">
    </target>

    <!-- ************************************************************************** -->
    <!-- ************ REMOVE EVERYTHING BELOW HERE FOR THE DISTRIBUTION ************* -->
    <!-- ************************************************************************** -->

    <target name="dist_tcs" depends="clean,dist,javadoc">
        <!-- define tcs distribution format -->
<!-- uncomment if configuration files exist.
        <mkdir dir="${dist_conf}"/>
        <copy todir="${dist_conf}">
            <fileset dir="${configdir}" />
        </copy>
-->

        <mkdir dir="${dist_src}"/>
        <copy todir="${dist_src}">
            <fileset dir="${srcdir}" />
        </copy>

        <copy todir="${dist_docs}" >
            <fileset dir="${docsdir}">
                <include name="${component}_Class_Diagram*"/>
                <include name="${component}_Use_Case_Diagram*"/>
                <include name="${component}_Sequence_Diagram*"/>
                <include name="${component}_Requirements_Specification*"/>
                <include name="${component}_Component_Specification*"/>
                <include name="${component}.zargo"/>
                <include name="${component}.zuml"/>
            </fileset>
        </copy>

        <mkdir dir="${dist_javadocs}"/>
        <copy todir="${dist_javadocs}">
            <fileset dir="${javadocsdir}" />
        </copy>

        <antcall target="package_docs" />

<!-- uncomment if test files exist.
        <mkdir dir="${dist_testfiles}"/>
        <copy todir="${dist_testfiles}">
            <fileset dir="${testfiles}" />
        </copy>
-->
        <copy file="build_dist.xml" tofile="${build_tcsdistdir}/build.xml" />
        <copy file="README" tofile="${build_tcsdistdir}/README" />
        <jar jarfile="${component.dist.jar}" basedir="${build_distdir}" excludes="*.jar"/>
        
        <antcall target="move_to_tcs"/>
    </target>

    <target name="package_docs" depends="javadoc">
        <mkdir dir="${dist_docpackage}" />
    
        <jar jarfile="${dist_docpackage}/${javadoc.jar}" basedir="${build_tcsdistdir}/${javadocsdir}" />
        
        <copy todir="${dist_docpackage}" >
            <fileset dir="${docsdir}">
                <include name="${component}_Class_Diagram*"/>
                <include name="${component}_Use_Case_Diagram*"/>
                <include name="${component}_Sequence_Diagram*"/>
                <include name="${component}_Requirements_Specification.pdf"/>
                <include name="${component}_Component_Specification.pdf"/>
            </fileset>
        </copy>
        
        <jar jarfile="${builddir}/${docpackage.jar}" basedir="${dist_docpackage}" />
    </target>
    
    <target name="move_to_tcs">
        <mkdir dir="${tcs_libdir}/${component_path}"/>
        <mkdir dir="${tcs_libdir}/${component_path}/dist"/>

        <copy file="${component.jar}" todir="${tcs_libdir}/${component_path}"/>
        <copy file="${component.dist.jar}" todir="${tcs_libdir}/${component_path}/dist"/>
    </target>

    <target name="dev_submission" depends="test">
        <jar jarfile="${dev_submission.jar}"
             basedir="."
             includes="${configdir}/**,${javamain}/**/*.java,${javatests}/${packagedir}/**,${testlogdir}/**,${testfiles}/**,${docsdir}/**"
             excludes="${javatests}/${packagedir}/AllTests.java,${javatests}/${packagedir}/stresstests/*,${javatests}/${packagedir}/failuretests/*,
                       ${javatests}/${packagedir}/accuracytests/*"
        />
    </target>

    <target name="design_submission">
        <jar jarfile="${design_submission.jar}"
             basedir="."
             includes="${configdir}/**,${javamain}/**,${docsdir}/**,${testfiles}/**"
        />
    </target>

    <target name="dev_dist">
        <!-- copy TCS Dependencies -->
        <mkdir dir="${jar_tcs_libdir}/${configmanager.path}"/>
        <copy file="${configmanager.jar}" todir="${jar_tcs_libdir}/${configmanager.path}" />
        <mkdir dir="${jar_tcs_libdir}/${base_exception.path}"/>
        <copy file="${base_exception.jar}" todir="${jar_tcs_libdir}/${base_exception.path}" />
        <mkdir dir="${jar_tcs_libdir}/${priority_queue.path}"/>
        <copy file="${priority_queue.jar}" todir="${jar_tcs_libdir}/${priority_queue.path}" />
        <mkdir dir="${jar_tcs_libdir}/${synchronous_processing_wrapper.path}"/>
        <copy file="${synchronous_processing_wrapper.jar}" todir="${jar_tcs_libdir}/${synchronous_processing_wrapper.path}" />
        <mkdir dir="${jar_tcs_libdir}/${object_factory.path}"/>
        <copy file="${object_factory.jar}" todir="${jar_tcs_libdir}/${object_factory.path}" />
        <mkdir dir="${jar_tcs_libdir}/${stoppable_thread.path}"/>
        <copy file="${stoppable_thread.jar}" todir="${jar_tcs_libdir}/${stoppable_thread.path}" />
        <mkdir dir="${jar_tcs_libdir}/${command_line_utility.path}"/>
        <copy file="${command_line_utility.jar}" todir="${jar_tcs_libdir}/${command_line_utility.path}" />
        
        <jar jarfile="${dev_dist.jar}"
             basedir="."
             includes="build.xml,
                       ${configdir}/**,
                       ${srcdir}/**,
                       ${docsdir}/**,
                       ${jar_tcs_libdir}/**,
                       ${testfiles}/**"
        />

        <delete dir="${jar_tcs_libdir}"/>
    </target>

    <target name="design_dist">
        <jar jarfile="${design_dist.jar}"
             basedir="."
             includes="build.xml,
                       ${configdir}/**,
                       ${srcdir}/**,
                       ${docsdir}/**,
                       ${jar_tcs_libdir}/**,
                       ${testfiles}/**"
        />
    </target>

</project>
